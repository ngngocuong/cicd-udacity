name: frontend-ci
on:
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: lint
      run: npm --prefix starter/frontend install && npm --prefix starter/frontend run lint

  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3 

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
      
    - name: lint
      run: npm --prefix starter/frontend install && CI=true npm --prefix starter/frontend test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - name: Checkout
      uses: actions/checkout@v3 
    - name: build src
      run: npm --prefix starter/frontend install && CI=true npm --prefix starter/frontend run build
    - name: Build Docker image
      env:
        BACKEND_ENDPOINT: ${{ secrets.BACKEND_ENDPOINT }}
      run: |
        cd starter/frontend && docker build --build-arg=REACT_APP_MOVIE_API_URL=$BACKEND_ENDPOINT -t my-frontend-app:${{ github.sha }} .
        echo "Build image successfully"
