name: frontend-cd
on:
  workflow_dispatch:
  push:
    branches: 
      - main
    paths: 
      - starter/frontend

env:
  ECR_REPO_NAME: 334677819384.dkr.ecr.us-east-1.amazonaws.com/cherkavi-udacity-github-action-fe
  CONTAINER_TAG: '1.0.2'
  API_URL: 'http://backend'
  AWS_REGION: 'us-east-1'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3 
    - name: lint
      run: npm --prefix starter/frontend install && npm --prefix starter/frontend run lint

  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3 
    - name: lint
      run: npm --prefix starter/frontend install && CI=true npm --prefix starter/frontend test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - name: Checkout
      uses: actions/checkout@v3 
    - name: build
      run: npm --prefix starter/frontend install && CI=true npm --prefix starter/frontend run build

    - name: Build Docker image
      run: |
        cd starter/frontend && docker build -t my-frontend-app:${{ github.sha }} .
      
    - name: set aws credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    
    - name: docker login
      uses: aws-actions/amazon-ecr-login@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Push Docker image to ECR
      run: |
        IMAGE_URI=$(aws ecr describe-repositories --repository-names frontend --region us-east-1 --query 'repositories[0].repositoryUri' --output text)
        docker tag my-frontend-app:${{ github.sha }} $IMAGE_URI:${{ github.sha }}
        docker push $IMAGE_URI:${{ github.sha }}

      # Step 9: Install Kustomize
    - name: Install Kustomize
      run: |
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
        sudo mv kustomize /usr/local/bin/

      # Step 10: Configure kubeconfig for EKS
    - name: Configure kubeconfig for EKS
      run: aws eks update-kubeconfig --region us-east-1 --name cluster
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Step 11: Update Kubernetes Manifests with New Image
    - name: Update image in Kubernetes manifests
      working-directory: starter/frontend/k8s
      run: |
        IMAGE_URI=$(aws ecr describe-repositories --repository-names backend --region us-east-1 --query 'repositories[0].repositoryUri' --output text)
        kustomize edit set image frontend=$IMAGE_URI:${{ github.sha }}

      # Step 12: Deploy to Kubernetes Cluster
    - name: Deploy to Kubernetes
      working-directory: starter/frontend/k8s
      run: kustomize build | kubectl apply -f -

